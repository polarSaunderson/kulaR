% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kulaK.R
\name{kulaK}
\alias{kulaK}
\title{Returns a khroma colour scheme}
\usage{
kulaK(
  palette,
  count,
  include = NULL,
  skipMid = NULL,
  reverse = FALSE,
  opacity = NULL,
  addFirst = NULL,
  addLast = NULL
)
}
\arguments{
\item{palette}{"string": Which colour palette to use? The name must match
the options available in khroma, which can be accessed using the
\code{\link[=list_kula_palettes]{list_kula_palettes()}} function.}

\item{count}{numeric: How many colours should be included in the colour
scheme? Do not count additional colours that are added using the addFirst
or addLast arguments.}

\item{include}{vector: Which colours should be included? This argument is
useful if we want a lopsided colour scheme, for example if we have a
range from -3 to 6, and only want to show 3 colour values to the left,
but 6 colour values to the right (i.e. -3 and 3 should be equivalent, not
-3 and 6). If a numeric vector of length 2 is supplied, the values are
respectively applied to the left and right of the midpoint. Positive
values count outwards from the centre, listing how many colours should be
included in the respective direction; negative values count inwards from
the ends, listing how many colours should be excluded. If a numeric
vector of length > 2 is supplied, it is simply used to index into the
full vector. If a vector of character strings is supplied, it will try to
match them against the colour names, which is useful on qualitative
colour schemes. This argument is applied after the skipMid argument.}

\item{skipMid}{numeric: To use more intense colours on a diverging colour
scheme, we can skip the paler colours around the divergence (usually 0).
This argument indicates how many should be skipped each side, meaning
that larger numbers cause more intense colours. It works by telling
khroma that we want extra colours in our colour scheme and then removing
the pale ones in the middle. Applied before the include argument.}

\item{reverse}{BINARY: Should the full colour palette be reversed? Applied
before the include argument.}

\item{opacity}{numeric: A value between 0 (invisible) and 10 (intense),
applied to all colours before the function returns them (but before
addFirst or addLast are applied).}

\item{addFirst}{Add a colour at the beginning of the scheme; useful if, for
example, you want to show all values below a minimum cutoff value in a
certain colour to ignore (or highlight) them.}

\item{addLast}{Add a colour at the end of the scheme; useful if, for
example, you want to show all values above a top cutoff in a certain
colour to ignore (or highlight) them.}
}
\description{
This function is essentially a wrapper around the khroma
package's colour function, but with syntax that I find slightly more
logical, and which allows me to make common adjustments I have found
myself doing frequently when using colours. This function is the basis of
the other "kulaX" functions in kulaR, which are just even quicker
wrappers.
}
\examples{
   plot(kulaK("BuRd", 10))
   plot(kulaK("BuRd", 10, include = c(3, 5)))
   plot(kulaK("BuRd", 10, include = c(1:8)))
   plot(kulaK("BuRd", 20, include = c(1:8, 13:16)))
   plot(kulaK("BuRd", 10, skipMid = 2))
   plot(kulaK("BuRd", 10, reverse = TRUE))
   plot(kulaK("BuRd", 10, addFirst = "black"))

}
